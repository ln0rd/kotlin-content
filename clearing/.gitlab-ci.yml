variables:
  ING_DOMAIN: 'ing.$PROJECT_NAME.gcp.hash.com.br'
  GITLAB_REGISTRY: 'registry.gitlab.com/hashlaborg/infra/images'
  DEV_NAMESPACE: 'payment-infra-dev'

stages:
  - Migration
  - Deploy

.deploy_job: &deploy_def
  image:
    name: $GITLAB_REGISTRY/helm_deploy:latest
  before_script:
    - mkdir /root/.ssh
    - echo $SSH | base64 -d > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
    - ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts
    - mv $APP_CONFIG app-config.yaml
    - kubectl apply -n $DEV_NAMESPACE -f app-config.yaml
    - git clone --depth=1 git@github.com:hashlab/infra.git

staging:migrate-up:deploy:
  stage: Migration
  tags:
    - production-cd
  <<: *deploy_def
  variables:
    APP_NAME: clearing-db-migration
    NAMESPACE: payment-infra-dev
  script: |-
    set -e
    echo -e "\n - Deploying $DEV_NAMESPACE/$APP_NAME \n"
    kubectl delete job -n $DEV_NAMESPACE $APP_NAME || true
    helm template infra/charts/generic \
      --set job.name=$APP_NAME \
      --set job.image=gcr.io/$PROJECT_ID/$APP_NAME:$CI_COMMIT_SHORT_SHA \
      --set job.podAnnotations.sidecar\\.istio\\.io/inject=false \
      --set environmentType=staging \
      --set job.envSecrets.hostname=clearing-dev-db-credentials \
      --set job.envSecrets.username=clearing-dev-db-credentials \
      --set job.envSecrets.password=clearing-dev-db-credentials \
      --set job.env.database="clearing" \
      --set job.env.port=5432 \
      --set logoutput.enabled=false \
      --set job.resources.limitsCPU=100m \
      --set job.resources.limitsMemory=1000Mi \
      --set job.resources.requestsCPU=10m \
      --set job.resources.requestsMemory=500Mi | kubectl -n $DEV_NAMESPACE apply -f -
    kubectl wait --for=condition=complete --timeout=240s job/$APP_NAME -n $DEV_NAMESPACE || true
    kubectl logs -n $DEV_NAMESPACE -l job-name=$APP_NAME -c job
  when: manual

staging:deploy:
  stage: Deploy
  image: $GITLAB_REGISTRY/helm_deploy:latest
  tags:
    - production-cd
  variables:
    APP_NAME: clearing
    HTTP_PORT: '8080'
  <<: *deploy_def
  script: |-
    set -e
    echo -e "\n#####################################################################"
    echo -e "\n - DEPLOY $APP_NAME \n"
    echo -e "\n#####################################################################"
    helm template infra/charts/generic \
        --set environment=$APP_NAME-$CI_ENVIRONMENT_SLUG \
        --set environmentType=staging \
        --set replicaCount=1 \
        --set image.repository=gcr.io/$PROJECT_ID/clearing \
        --set image.tag=$CI_COMMIT_SHORT_SHA \
        --set env.ISTIO_PROXY_ENABLED="true" \
        --set serviceAccountName=clearing-dev \
        --set envSecrets.TRANSACTION_READER_DELAY=clearing-dev-app-config \
        --set envSecrets.TRANSACTION_PRE_PROCESSOR_DELAY=clearing-dev-app-config \
        --set envSecrets.TRANSACTION_PROCESSOR_DELAY=clearing-dev-app-config \
        --set envSecrets.META_ACCOUNTING_SENDER_DELAY=clearing-dev-app-config \
        --set envSecrets.RECEIVABLES_SCHEDULE_SENDER_DELAY=clearing-dev-app-config \
        --set envSecrets.PUBSUB_TOPIC_ID=clearing-dev-app-config \
        --set envSecrets.PUBSUB_SUBSCRIPTION_ID=clearing-dev-app-config \
        --set envSecrets.PUBSUB_MAX_MESSAGES=clearing-dev-app-config \
        --set envSecrets.TRANSACTION_SERVICE_URL=clearing-dev-app-config \
        --set envSecrets.TRANSACTION_SERVICE_USERNAME=clearing-dev-app-config \
        --set envSecrets.TRANSACTION_SERVICE_PASSWORD=clearing-dev-app-config \
        --set envSecrets.PRICING_ENGINE_URL=clearing-dev-app-config \
        --set envsFromSecret[0].envVar=POSTGRES_HOST \
        --set envsFromSecret[0].secretName=clearing-dev-db-credentials \
        --set envsFromSecret[0].secretKey=hostname \
        --set envsFromSecret[1].envVar=POSTGRES_USER \
        --set envsFromSecret[1].secretName=clearing-dev-db-credentials \
        --set envsFromSecret[1].secretKey=username \
        --set envsFromSecret[2].envVar=POSTGRES_PASS \
        --set envsFromSecret[2].secretName=clearing-dev-db-credentials \
        --set envsFromSecret[2].secretKey=password \
        --set env.POSTGRES_DB="clearing" \
        --set env.POSTGRES_PORT=5432 \
        --set env.PORT=$HTTP_PORT \
        --set resources.limits.cpu=500m \
        --set resources.limits.memory=1000Mi \
        --set resources.requests.cpu=200m \
        --set resources.requests.memory=400Mi \
        --set service.targetPort=$HTTP_PORT \
        --set service.port=$HTTP_PORT \
        --set service.enabled=true \
        --set service.portName=http \
        --set containerPorts[0].portNumber=$HTTP_PORT \
        --set containerPorts[0].portName=clearing \
        --set livenessProbe.typeProbe=httpGet \
        --set livenessProbe.httpGet.path="/healthz" \
        --set livenessProbe.httpGet.port=$HTTP_PORT \
        --set livenessProbe.periodSeconds=60 \
        --set livenessProbe.initialDelaySeconds=120 \
        --set readinessProbe.typeProbe=httpGet \
        --set readinessProbe.httpGet.path="/readiness" \
        --set readinessProbe.httpGet.port=$HTTP_PORT \
        --set readinessProbe.periodSeconds=60 \
        --set readinessProbe.initialDelaySeconds=120 \
        --set container.securityContext.readOnlyRootFilesystem=true \
        --set volume.name=tmpdir \
        --set volume.path=/tmp \
        --set volume.emptyDir=true \
        --set ingress.enabled=true \
        --set ingress.gateway.credentialName=generic-certs-hash \
        --set ingress.gateway.hosts=$CI_ENVIRONMENT_SLUG-$APP_NAME.$ING_DOMAIN | kubectl -n $DEV_NAMESPACE apply -f -
    kubectl rollout status -n $DEV_NAMESPACE deployment/$APP_NAME-$CI_ENVIRONMENT_SLUG
  environment:
    name: dev
    url: https://dev-$APP_NAME.$ING_DOMAIN
  only:
    - master
  when: manual
